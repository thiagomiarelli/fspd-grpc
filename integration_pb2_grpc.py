# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import integration_pb2 as integration__pb2


class IntegrationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterIntegration = channel.unary_unary(
                '/unary.Integration/RegisterIntegration',
                request_serializer=integration__pb2.RegisterIntegrationParams.SerializeToString,
                response_deserializer=integration__pb2.RegisterIntegrationReturn.FromString,
                )
        self.GetIntegration = channel.unary_unary(
                '/unary.Integration/GetIntegration',
                request_serializer=integration__pb2.GetIntegrationParams.SerializeToString,
                response_deserializer=integration__pb2.GetIntegrationReturn.FromString,
                )
        self.StopIntegrationServer = channel.unary_unary(
                '/unary.Integration/StopIntegrationServer',
                request_serializer=integration__pb2.StopIntegrationServerParams.SerializeToString,
                response_deserializer=integration__pb2.StopIntegrationServerReturn.FromString,
                )


class IntegrationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterIntegration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIntegration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopIntegrationServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntegrationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterIntegration': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterIntegration,
                    request_deserializer=integration__pb2.RegisterIntegrationParams.FromString,
                    response_serializer=integration__pb2.RegisterIntegrationReturn.SerializeToString,
            ),
            'GetIntegration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIntegration,
                    request_deserializer=integration__pb2.GetIntegrationParams.FromString,
                    response_serializer=integration__pb2.GetIntegrationReturn.SerializeToString,
            ),
            'StopIntegrationServer': grpc.unary_unary_rpc_method_handler(
                    servicer.StopIntegrationServer,
                    request_deserializer=integration__pb2.StopIntegrationServerParams.FromString,
                    response_serializer=integration__pb2.StopIntegrationServerReturn.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unary.Integration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Integration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterIntegration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Integration/RegisterIntegration',
            integration__pb2.RegisterIntegrationParams.SerializeToString,
            integration__pb2.RegisterIntegrationReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIntegration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Integration/GetIntegration',
            integration__pb2.GetIntegrationParams.SerializeToString,
            integration__pb2.GetIntegrationReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopIntegrationServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Integration/StopIntegrationServer',
            integration__pb2.StopIntegrationServerParams.SerializeToString,
            integration__pb2.StopIntegrationServerReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
